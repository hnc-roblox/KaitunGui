-- üöÄ HNC Hub - Fix Lag b·∫±ng c√°ch xo√° h·∫øt Animation
-- By Kaitun

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- H√†m xo√° animation
local function removeAnimations(char)
    if not char then return end

    -- Xo√° Animator
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if humanoid then
        for _, obj in ipairs(humanoid:GetChildren()) do
            if obj:IsA("Animator") or obj:IsA("Animation") then
                obj:Destroy()
            end
        end

        -- NgƒÉn animator m·ªõi ƒë∆∞·ª£c th√™m v√†o
        humanoid.ChildAdded:Connect(function(child)
            if child:IsA("Animator") or child:IsA("Animation") then
                task.wait() -- tr√°nh l·ªói khi m·ªõi spawn
                child:Destroy()
            end
        end)
    end
end

-- √Åp ngay cho nh√¢n v·∫≠t hi·ªán t·∫°i
if LocalPlayer.Character then
    removeAnimations(LocalPlayer.Character)
end

-- T·ª± ƒë·ªông khi respawn
LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid")
    removeAnimations(char)
end)
-- ‚ö° SUPER FIX LAG - 98% skill FX removed + gray sky + invisible water + 20% map transparency
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")
local player = Players.LocalPlayer

local REMOVE_CHANCE = 0.98
local REDUCE_SCALE = 0.5

-- ====== H√ÄM H·ªñ TR·ª¢ ======
local function scaleNumberSequence(ns, scale)
    if typeof(ns) ~= "NumberSequence" then return ns end
    local newKeys = {}
    for _, k in ipairs(ns.Keypoints) do
        table.insert(newKeys, NumberSequenceKeypoint.new(k.Time, k.Value * scale, k.Envelope or 0))
    end
    return NumberSequence.new(newKeys)
end

local function scaleNumberRange(nr, scale)
    if typeof(nr) ~= "NumberRange" then return nr end
    return NumberRange.new(nr.Min * scale, nr.Max * scale)
end

-- Gi·∫£m hi·ªáu ·ª©ng
local function reduceEffect(obj)
    local function safeSet(prop, val)
        pcall(function() obj[prop] = val end)
    end
    if obj:IsA("ParticleEmitter") then
        safeSet("Rate", obj.Rate * REDUCE_SCALE)
        safeSet("Lifetime", scaleNumberRange(obj.Lifetime, REDUCE_SCALE))
        safeSet("Size", scaleNumberSequence(obj.Size, REDUCE_SCALE))
        safeSet("Speed", scaleNumberRange(obj.Speed, REDUCE_SCALE))
        safeSet("LightEmission", obj.LightEmission * REDUCE_SCALE)
        safeSet("Transparency", scaleNumberSequence(obj.Transparency, REDUCE_SCALE))
    elseif obj:IsA("Beam") then
        safeSet("Width0", obj.Width0 * REDUCE_SCALE)
        safeSet("Width1", obj.Width1 * REDUCE_SCALE)
        safeSet("LightEmission", obj.LightEmission * REDUCE_SCALE)
        safeSet("Transparency", scaleNumberSequence(obj.Transparency, REDUCE_SCALE))
    elseif obj:IsA("Trail") then
        safeSet("Lifetime", obj.Lifetime * REDUCE_SCALE)
        safeSet("LightEmission", obj.LightEmission * REDUCE_SCALE)
        safeSet("Transparency", scaleNumberSequence(obj.Transparency, REDUCE_SCALE))
    end
end

-- X·ª≠ l√Ω hi·ªáu ·ª©ng
local function handleEffect(obj)
    if obj:IsA("ParticleEmitter") or obj:IsA("Beam") or obj:IsA("Trail") then
        if math.random() < REMOVE_CHANCE then
            pcall(function()
                if obj:IsA("ParticleEmitter") then obj.Enabled = false end
                if obj:IsA("Beam") then obj.Transparency = NumberSequence.new(1) end
                if obj:IsA("Trail") then obj.Transparency = NumberSequence.new(1) end
            end)
        else
            reduceEffect(obj)
        end
    end
end

-- ====== FIX LAG KH√ÅC ======
local function fixMapAndLighting()
    -- Gi·∫£m √°nh s√°ng
    Lighting.Brightness = Lighting.Brightness * 0.5
    Lighting.ShadowSoftness = 0
    Lighting.ColorShift_Top = Color3.fromRGB(128,128,128)
    Lighting.ColorShift_Bottom = Color3.fromRGB(128,128,128)

    -- B·∫ßu tr·ªùi x√°m
    for _, sky in ipairs(Lighting:GetChildren()) do
        if sky:IsA("Sky") then
            sky:Destroy()
        end
    end
    local graySky = Instance.new("Sky")
    graySky.SkyboxBk = "rbxassetid://0"
    graySky.SkyboxDn = "rbxassetid://0"
    graySky.SkyboxFt = "rbxassetid://0"
    graySky.SkyboxLf = "rbxassetid://0"
    graySky.SkyboxRt = "rbxassetid://0"
    graySky.SkyboxUp = "rbxassetid://0"
    graySky.SunAngularSize = 0
    graySky.MoonAngularSize = 0
    graySky.Parent = Lighting

    -- N∆∞·ªõc t√†ng h√¨nh ho√†n to√†n
    Workspace.Terrain.WaterColor = Color3.fromRGB(128,128,128)
    Workspace.Terrain.WaterTransparency = 1
    Workspace.Terrain.WaterWaveSize = 0
    Workspace.Terrain.WaterWaveSpeed = 0

    -- L·∫•y t·∫•t c·∫£ part c·ªßa map
    local allParts = {}
    for _, part in ipairs(Workspace:GetDescendants()) do
        if part:IsA("BasePart") and part.Parent ~= player.Character then
            table.insert(allParts, part)
        end
    end

    -- 20% map t√†ng h√¨nh
    for _, part in ipairs(allParts) do
        if math.random() < 0.2 then
            part.Transparency = 0.8
            part.CanCollide = true
        else
            part.Material = Enum.Material.SmoothPlastic
        end
    end
end

local function graySomeBodyParts()
    if player.Character then
        for _, part in ipairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") and math.random() < 0.4 then
                part.Color = Color3.fromRGB(128, 128, 128)
            end
        end
    end
end

-- ====== T·ªêI ∆ØU TO√ÄN B·ªò ======
local function optimizeAll()
    -- X·ª≠ l√Ω hi·ªáu ·ª©ng hi·ªán c√≥
    for _, obj in ipairs(Workspace:GetDescendants()) do
        handleEffect(obj)
    end
    fixMapAndLighting()
    graySomeBodyParts()
    print("‚úÖ Super Fix Lag: 98% skill FX removed, invisible water, 20% map transparency.")
end

-- Theo d√µi hi·ªáu ·ª©ng m·ªõi
Workspace.DescendantAdded:Connect(function(obj)
    task.defer(function()
        handleEffect(obj)
    end)
end)

-- √Åp l·∫°i khi respawn
player.CharacterAdded:Connect(function()
    task.wait(1)
    optimizeAll()
end)

-- L·∫ßn ƒë·∫ßu v√†o game
optimizeAll()

-- By HNC Roblox
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

-- Function: Remove most skill effects
local function removeSkillEffects(obj)
    if obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Beam") then
        if math.random() < 0.98 then
            obj:Destroy()
        else
            obj.Rate = obj.Rate * 0.5
            if obj.Lifetime then obj.Lifetime = NumberRange.new(obj.Lifetime.Min * 0.5, obj.Lifetime.Max * 0.5) end
        end
    elseif obj:IsA("Explosion") or obj:IsA("Fire") or obj:IsA("Smoke") then
        if math.random() < 0.98 then obj:Destroy() end
    end
end

-- Function: Gray + invisible map parts
local function optimizePart(part)
    if part:IsA("BasePart") then
        if math.random() < 0.2 then
            part.Transparency = 1
        else
            part.Material = Enum.Material.SmoothPlastic
            part.Color = Color3.fromRGB(150, 150, 150)
        end
    end
end

-- Function: Optimize water
local function optimizeWater()
    Workspace.Terrain.WaterColor = Color3.fromRGB(150, 150, 150)
    Workspace.Terrain.WaterTransparency = 1
end

-- Function: Optimize lighting
local function optimizeLighting()
    for _,v in pairs(Lighting:GetChildren()) do
        if v:IsA("Sky") then v:Destroy() end
    end
    Lighting.Ambient = Color3.fromRGB(150,150,150)
    Lighting.Brightness = 1
    Lighting.GlobalShadows = false
end

-- Function: Disable NPC animations
local function disableNPCAnimations()
    for _,hum in ipairs(Workspace:GetDescendants()) do
        if hum:IsA("Humanoid") and Players:GetPlayerFromCharacter(hum.Parent) == nil then
            if hum:FindFirstChild("Animator") then
                hum.Animator:Destroy()
            end
        end
    end
end

-- Apply to existing objects
for _,obj in ipairs(Workspace:GetDescendants()) do
    removeSkillEffects(obj)
    optimizePart(obj)
end
optimizeWater()
optimizeLighting()
disableNPCAnimations()

-- Auto apply to new objects
Workspace.DescendantAdded:Connect(function(obj)
    removeSkillEffects(obj)
    optimizePart(obj)
end)

-- Auto apply when respawn
LocalPlayer.CharacterAdded:Connect(function()
    task.wait(1)
    for _,obj in ipairs(Workspace:GetDescendants()) do
        removeSkillEffects(obj)
        optimizePart(obj)
    end
    optimizeWater()
    optimizeLighting()
    disableNPCAnimations()
end)
-- üåå‚ú® HNC Hub - Auto Kaitun Menu
-- By Kaitun

local ts = game:GetService("TweenService")
local plr = game.Players.LocalPlayer

-- Parent UI
local function getParent()
    local ok, ui = pcall(function() return gethui() end)
    if ok and ui then return ui end
    if game.CoreGui then return game.CoreGui end
    return plr:WaitForChild("PlayerGui")
end

local gui = Instance.new("ScreenGui")
gui.Name = "HNCHubMenu"
gui.ResetOnSpawn = false
gui.Parent = getParent()

-- ‚ùì Icon button
local iconBtn = Instance.new("TextButton")
iconBtn.Size = UDim2.new(0, 40, 0, 40)
iconBtn.Position = UDim2.new(1, -50, 0, 20)
iconBtn.AnchorPoint = Vector2.new(0, 0)
iconBtn.Text = "‚ùì"
iconBtn.TextScaled = true
iconBtn.Font = Enum.Font.GothamBold
iconBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
iconBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
iconBtn.Parent = gui

local corner = Instance.new("UICorner", iconBtn)
corner.CornerRadius = UDim.new(1, 0)

-- Menu Frame (·∫©n m·∫∑c ƒë·ªãnh)
local menuFrame = Instance.new("Frame")
menuFrame.Size = UDim2.new(0, 400, 0, 250)
menuFrame.Position = UDim2.new(0.5, -200, 0.5, -125)
menuFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
menuFrame.Visible = false
menuFrame.ClipsDescendants = true
menuFrame.Parent = gui

local mcorner = Instance.new("UICorner", menuFrame)
mcorner.CornerRadius = UDim.new(0, 20)

local stroke = Instance.new("UIStroke", menuFrame)
stroke.Thickness = 3
stroke.Color = Color3.fromRGB(0, 200, 255)

-- Gradient background
local grad = Instance.new("UIGradient", menuFrame)
grad.Rotation = 45
grad.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(72,61,139)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0,206,209)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(123,104,238))
}

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -20, 0, 40)
title.Position = UDim2.new(0, 10, 0, 10)
title.BackgroundTransparency = 1
title.Text = "HNC Hub - Auto Kaitun"
title.Font = Enum.Font.GothamBold
title.TextScaled = true
title.TextColor3 = Color3.fromRGB(255,255,255)
title.Parent = menuFrame

-- ScrollingFrame cho list
local scroll = Instance.new("ScrollingFrame")
scroll.Size = UDim2.new(1, -20, 1, -60)
scroll.Position = UDim2.new(0, 10, 0, 50)
scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
scroll.ScrollBarThickness = 4
scroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
scroll.BackgroundTransparency = 1
scroll.Parent = menuFrame

local UIList = Instance.new("UIListLayout", scroll)
UIList.Padding = UDim.new(0, 10)

-- Danh s√°ch item
local items = {
    "Auto Godhuman",
    "Auto True Triple Katana",
    "Auto Cursed Dual Katana",
    "Auto Kabucha",
    "Auto Mastery Sword"
}

for _, text in ipairs(items) do
    local lbl = Instance.new("TextLabel")
    lbl.Size = UDim2.new(1, -10, 0, 40)
    lbl.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    lbl.Text = text
    lbl.Font = Enum.Font.Gotham
    lbl.TextScaled = true
    lbl.TextColor3 = Color3.fromRGB(255,255,255)
    lbl.Parent = scroll

    local lcorner = Instance.new("UICorner", lbl)
    lcorner.CornerRadius = UDim.new(0, 10)
end

-- Animation khi m·ªü menu
local function toggleMenu()
    if menuFrame.Visible then
        -- ƒê√≥ng
        ts:Create(menuFrame, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 400, 0, 0)
        }):Play()
        task.wait(0.4)
        menuFrame.Visible = false
    else
        -- M·ªü
        menuFrame.Visible = true
        menuFrame.Size = UDim2.new(0, 400, 0, 0)
        ts:Create(menuFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 400, 0, 250)
        }):Play()
    end
end

iconBtn.MouseButton1Click:Connect(toggleMenu)

-- üåå‚ùÑÔ∏è HNC Hub Cosmic Snow Edition (Fixed)
-- By Kaitun

local ts = game:GetService("TweenService")
local plr = game.Players.LocalPlayer

-- Parent UI v√†o CoreGui
local function getParent()
    local ok, ui = pcall(function() return gethui() end)
    if ok and ui then return ui end
    if game.CoreGui then return game.CoreGui end
    return plr:WaitForChild("PlayerGui")
end

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "HNCHubUI"
ScreenGui.Parent = getParent()
ScreenGui.ResetOnSpawn = false

-- Frame ch√≠nh (cao h∆°n, m·ªèng, hi·ªán ƒë·∫°i)
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 480, 0, 90)
Frame.Position = UDim2.new(0.5, -240, 0, 10) -- cao h∆°n
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
Frame.BorderSizePixel = 0
Frame.AnchorPoint = Vector2.new(0,0)
Frame.Parent = ScreenGui
Frame.ClipsDescendants = true

-- Bo g√≥c
local corner = Instance.new("UICorner", Frame)
corner.CornerRadius = UDim.new(0, 25)

-- Vi·ªÅn ngo√†i ph√°t s√°ng
local stroke = Instance.new("UIStroke", Frame)
stroke.Thickness = 3
stroke.Transparency = 0.1

-- Gradient n·ªÅn cosmic lung linh
local gradient = Instance.new("UIGradient", Frame)
gradient.Rotation = 45
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(72,61,139)),
    ColorSequenceKeypoint.new(0.25, Color3.fromRGB(0,206,209)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(123,104,238)),
    ColorSequenceKeypoint.new(0.75, Color3.fromRGB(30,144,255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255,105,180))
}

-- Hi·ªáu ·ª©ng gradient ƒë·ªïi m√†u ƒë·ªông
task.spawn(function()
    while task.wait(4) do
        local newColors = {
            Color3.fromRGB(math.random(80,255), math.random(80,255), math.random(80,255)),
            Color3.fromRGB(math.random(80,255), math.random(80,255), math.random(80,255)),
            Color3.fromRGB(math.random(80,255), math.random(80,255), math.random(80,255))
        }
        ts:Create(gradient, TweenInfo.new(4, Enum.EasingStyle.Linear), {
            Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, newColors[1]),
                ColorSequenceKeypoint.new(0.5, newColors[2]),
                ColorSequenceKeypoint.new(1, newColors[3])
            }
        }):Play()
    end
end)

-- Vi·ªÅn rainbow
local colors = {
    Color3.fromRGB(138,43,226),
    Color3.fromRGB(0,191,255),
    Color3.fromRGB(75,0,130),
    Color3.fromRGB(255,20,147),
    Color3.fromRGB(0,255,255),
}
task.spawn(function()
    while task.wait(1.5) do
        for _, c in ipairs(colors) do
            ts:Create(stroke, TweenInfo.new(1.2, Enum.EasingStyle.Linear), {Color = c}):Play()
            task.wait(1.2)
        end
    end
end)

-- Ti√™u ƒë·ªÅ ch√≠nh
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -20, 0.6, 0)
Title.Position = UDim2.new(0, 10, 0, 10)
Title.BackgroundTransparency = 1
Title.Text = "HNC Hub"
Title.Font = Enum.Font.GothamBold
Title.TextScaled = true
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextStrokeTransparency = 0.2
Title.Parent = Frame

-- Ch·ªØ ph·ª•
local SubTitle = Instance.new("TextLabel")
SubTitle.Size = UDim2.new(1, -20, 0.3, 0)
SubTitle.Position = UDim2.new(0, 10, 0.65, 0)
SubTitle.BackgroundTransparency = 1
SubTitle.Text = "Kaitun"
SubTitle.Font = Enum.Font.Gotham
SubTitle.TextScaled = true
SubTitle.TextColor3 = Color3.fromRGB(200, 230, 255)
SubTitle.TextTransparency = 0.05
SubTitle.Parent = Frame

-- ‚ùÑÔ∏è Hi·ªáu ·ª©ng tuy·∫øt tr·∫Øng r∆°i quanh menu
local SnowFolder = Instance.new("Folder", ScreenGui)
SnowFolder.Name = "Snow"

local function createSnow()
    local snow = Instance.new("Frame")
    snow.Size = UDim2.new(0, math.random(3,6), 0, math.random(3,6))
    snow.Position = UDim2.new(math.random(), 0, -0.1, 0)
    snow.BackgroundColor3 = Color3.fromRGB(255,255,255)
    snow.BorderSizePixel = 0
    local corner = Instance.new("UICorner", snow)
    corner.CornerRadius = UDim.new(1,0)
    snow.Parent = SnowFolder

    ts:Create(snow, TweenInfo.new(math.random(6,10), Enum.EasingStyle.Linear), {
        Position = UDim2.new(math.random(), 0, 1.2, 0),
        BackgroundTransparency = 1
    }):Play()

    game:GetService("Debris"):AddItem(snow, 10)
end

task.spawn(function()
    while task.wait(0.2) do
        createSnow()
    end
end)
-- ƒê·ªïi m√†u nh√¢n v·∫≠t
-- üü¢ HNC Hub - Full Green Aura Body
-- By Kaitun

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- H√†m t·∫°o aura xanh ph·ªß to√†n th√¢n
local function applyGreenAura(char)
    if not char then return end
    
    -- X√≥a aura c≈© n·∫øu c√≥
    if char:FindFirstChild("GreenAura") then
        char.GreenAura:Destroy()
    end

    -- Highlight to√†n c∆° th·ªÉ
    local aura = Instance.new("Highlight")
    aura.Name = "GreenAura"
    aura.FillColor = Color3.fromRGB(0, 255, 0)   -- xanh l√°
    aura.OutlineColor = Color3.fromRGB(0, 255, 0)
    aura.FillTransparency = 0.3                  -- trong m·ªù nh√¨n xuy√™n
    aura.OutlineTransparency = 0                 -- vi·ªÅn s√°ng r√µ
    aura.Parent = char
end

-- √Åp ngay l·∫≠p t·ª©c khi ƒëang s·ªëng
if LocalPlayer.Character then
    applyGreenAura(LocalPlayer.Character)
end

-- T·ª± √°p l·∫°i khi respawn
LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("HumanoidRootPart")
    task.wait(1)
    applyGreenAura(char)
end)
_G.FastAttack = true

if _G.FastAttack then
    local _ENV = (getgenv or getrenv or getfenv)()

    local function SafeWaitForChild(parent, childName)
        local success, result = pcall(function()
            return parent:WaitForChild(childName)
        end)
        if not success or not result then
            warn("noooooo: " .. childName)
        end
        return result
    end

    local function WaitChilds(path, ...)
        local last = path
        for _, child in {...} do
            last = last:FindFirstChild(child) or SafeWaitForChild(last, child)
            if not last then break end
        end
        return last
    end

    local VirtualInputManager = game:GetService("VirtualInputManager")
    local CollectionService = game:GetService("CollectionService")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local TeleportService = game:GetService("TeleportService")
    local RunService = game:GetService("RunService")
    local Players = game:GetService("Players")
    local Player = Players.LocalPlayer

    if not Player then
        warn("Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi ch∆°i c·ª•c b·ªô.")
        return
    end

    local Remotes = SafeWaitForChild(ReplicatedStorage, "Remotes")
    if not Remotes then return end

    local Validator = SafeWaitForChild(Remotes, "Validator")
    local CommF = SafeWaitForChild(Remotes, "CommF_")
    local CommE = SafeWaitForChild(Remotes, "CommE")

    local ChestModels = SafeWaitForChild(workspace, "ChestModels")
    local WorldOrigin = SafeWaitForChild(workspace, "_WorldOrigin")
    local Characters = SafeWaitForChild(workspace, "Characters")
    local Enemies = SafeWaitForChild(workspace, "Enemies")
    local Map = SafeWaitForChild(workspace, "Map")

    local EnemySpawns = SafeWaitForChild(WorldOrigin, "EnemySpawns")
    local Locations = SafeWaitForChild(WorldOrigin, "Locations")

    local RenderStepped = RunService.RenderStepped
    local Heartbeat = RunService.Heartbeat
    local Stepped = RunService.Stepped

    local Modules = SafeWaitForChild(ReplicatedStorage, "Modules")
    local Net = SafeWaitForChild(Modules, "Net")

    local sethiddenproperty = sethiddenproperty or function(...) return ... end
    local setupvalue = setupvalue or (debug and debug.setupvalue)
    local getupvalue = getupvalue or (debug and debug.getupvalue)

    local Settings = {
        AutoClick = true,
        ClickDelay = 0.0000000000000000000001
    }

    local Module = {}

    Module.FastAttack = (function()
        if _ENV.rz_FastAttack then
            return _ENV.rz_FastAttack
        end

        local FastAttack = {
            Distance = 1000,
            attackMobs = true,
            attackPlayers = true,
            Equipped = nil
        }

        local RegisterAttack = SafeWaitForChild(Net, "RE/RegisterAttack")
        local RegisterHit = SafeWaitForChild(Net, "RE/RegisterHit")

        local function IsAlive(character)
        return character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0
        end

        local function ProcessEnemies(OthersEnemies, Folder)
            local BasePart = nil
            for _, Enemy in Folder:GetChildren() do
                local Head = Enemy:FindFirstChild("Head")
                if Head and IsAlive(Enemy) and Player:DistanceFromCharacter(Head.Position) < FastAttack.Distance then
                    if Enemy ~= Player.Character then
                        table.insert(OthersEnemies, { Enemy, Head })
                        BasePart = Head
                    end
                end
            end
            return BasePart
        end

        function FastAttack:Attack(BasePart, OthersEnemies)
            if not BasePart or #OthersEnemies == 0 then return end
            RegisterAttack:FireServer(Settings.ClickDelay or 0)
            RegisterHit:FireServer(BasePart, OthersEnemies)
        end

        function FastAttack:AttackNearest()
            local OthersEnemies = {}
            local Part1 = ProcessEnemies(OthersEnemies, Enemies)
            local Part2 = ProcessEnemies(OthersEnemies, Characters)
            if #OthersEnemies > 0 then
                self:Attack(Part1 or Part2, OthersEnemies)
            else
                task.wait(0)
            end
        end

        function FastAttack:BladeHits()
            local Equipped = IsAlive(Player.Character) and Player.Character:FindFirstChildOfClass("Tool")
            if Equipped and Equipped.ToolTip ~= "Gun" then
                self:AttackNearest()
            else
                task.wait(0)
            end
        end

        task.spawn(function()
            while task.wait(Settings.ClickDelay) do
                if Settings.AutoClick then
                    FastAttack:BladeHits()
                end
            end
        end)

        _ENV.rz_FastAttack = FastAttack
        return FastAttack
    end)()
end
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- T√πy ch·ªânh
local TEXT = "HNC Hub"
local TEXT_SIZE = 18                 -- k√≠ch th∆∞·ªõc ch·ªØ (kh√¥ng qu√° to)
local GUI_OFFSET = Vector3.new(0, 1.8, 0) -- kho·∫£ng c√°ch so v·ªõi ƒë·∫ßu
local RAINBOW_SPEED = 1.0           -- t·ªëc ƒë·ªô ƒë·ªïi m√†u (1 = b√¨nh th∆∞·ªùng, tƒÉng ƒë·ªÉ nhanh h∆°n)

local function createBillboardFor(character)
    if not character then return end
    local head = character:FindFirstChild("Head") or character:FindFirstChildWhichIsA("BasePart")
    if not head then return end

    -- N·∫øu ƒë√£ c√≥ Billboard do script t·∫°o th√¨ h·ªßy tr∆∞·ªõc
    local existing = head:FindFirstChild("HNC_FastAttack_Label")
    if existing then existing:Destroy() end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "HNC_FastAttack_Label"
    billboard.Adornee = head
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 200, 0, 40) -- k√≠ch th∆∞·ªõc GUI
    billboard.StudsOffset = GUI_OFFSET
    billboard.Parent = head

    local textLabel = Instance.new("TextLabel")
    textLabel.Name = "Label"
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = TEXT
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.TextSize = TEXT_SIZE
    textLabel.TextStrokeTransparency = 0.6
    textLabel.TextTransparency = 0
    textLabel.TextScaled = false
    textLabel.Parent = billboard

    -- rainbow loop
    local hue = 0
    local con
    con = RunService.RenderStepped:Connect(function(dt)
        hue = (hue + dt * RAINBOW_SPEED) % 1
        local rgb = Color3.fromHSV(hue, 0.9, 1)
        if textLabel and textLabel.Parent then
            textLabel.TextColor3 = rgb
        else
            if con then con:Disconnect() end
        end
    end)
end

-- khi spawn/respawn character
local function onCharacterAdded(character)
    -- ƒë·ª£i head xu·∫•t hi·ªán
    if not character.Parent then
        character.AncestryChanged:Wait()
    end
    -- t·∫°o sau 0.1s ƒë·ªÉ head ch·∫Øc ch·∫Øn c√≥
    wait(0.1)
    createBillboardFor(character)
end

-- k·∫øt n·ªëi
if player.Character then
    onCharacterAdded(player.Character)
end
player.CharacterAdded:Connect(onCharacterAdded)

-- optional: n·∫øu mu·ªën t·∫Øt khi r·ªùi game (cleanup)
player.AncestryChanged:Connect(function(_, parent)
    if not parent then
        -- client ƒëang b·ªã remove, nothing to do
    end
end)
   
